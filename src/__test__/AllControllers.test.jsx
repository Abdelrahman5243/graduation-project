import React from "react";import { render, screen, fireEvent } from "@testing-library/react";import { useDispatch } from "react-redux";import AllControllers from "../components/dashboard/controllers/AllControllers";jest.mock("react-redux", () => ({    useDispatch: jest.fn(),}));describe("AllControllers component", () => {    test("renders the controller section name", () => {        const controllerSection = "exampleSection";        const targetTemplate = {            exampleSection: {                field1: "value1",                field2: "value2",            },        };        const updateAll = { updateTemplate: jest.fn() };        const isFixed = false;        const isFirst = true;        const isLast = true;        render(            <AllControllers                controllerSection={controllerSection}                targetTemplate={targetTemplate}                updateAll={updateAll}                isFixed={isFixed}                isFirst={isFirst}                isLast={isLast}            />        );        const sectionNameElement = screen.getByText(`${controllerSection} section`);        expect(sectionNameElement).toBeInTheDocument();    });    test("handles adding a new element", () => {        const controllerSection = "exampleSection";        const targetTemplate = {            exampleSection: {                field1: ["value1"],                field2: "value2",            },        };        const updateAll = { addNewElement: jest.fn() };        const isFixed = false;        const isFirst = true;        const isLast = true;        useDispatch.mockReturnValue(updateAll);        render(            <AllControllers                controllerSection={controllerSection}                targetTemplate={targetTemplate}                updateAll={updateAll}                isFixed={isFixed}                isFirst={isFirst}                isLast={isLast}            />        );        const addButton = screen.getByText(`Add field1`);        fireEvent.click(addButton);        expect(updateAll.addNewElement).toHaveBeenCalledWith({            section: controllerSection,            blockName: "field1",        });    });});